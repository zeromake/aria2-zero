on:
  push:
    tags:
      - 'v*'
jobs:
  build-windows:
    runs-on: windows-latest
    steps:
      - name: git-config
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v4
      - name: xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
      # - name: Download llvm-mingw
      #   uses: robinraju/release-downloader@main
      #   with:
      #     repository: "mstorsjo/llvm-mingw"
      #     latest: true
      #     extract: false
      #     fileName: "llvm-mingw-*-ucrt-x86_64.zip"
      # - name: Install llvm-mingw
      #   run: |
      #     unzip llvm-mingw-*-ucrt-x86_64.zip | Out-Null && rm llvm-mingw-*-ucrt-x86_64.zip
      #     mv llvm-mingw-* llvm-mingw
      # - name: build x64
      #   env:
      #     VERSION: ${{ github.ref_name }}
      #   run: |
      #     $env:PATH = "$(Get-Location)\llvm-mingw\bin;$env:PATH"
      #     xmake f -p mingw -a x86_64 -c -y --use_quictls=n && xmake pack aria2
      - name: build arm64
        env:
          VERSION: ${{ github.ref_name }}
        run: xmake f -a arm64 -c -y && xmake pack aria2
      - name: build x86
        env:
          VERSION: ${{ github.ref_name }}
        run: xmake f -a x86 -c -y && xmake pack aria2
      - name: build x64
        env:
          VERSION: ${{ github.ref_name }}
        run: xmake f -a x64 -c -y && xmake pack aria2
      - name: cp
        run: New-Item -ItemType Directory -Path dist && cp build/xpack/aria2/*.zip dist/
      - uses: actions/upload-artifact@v4
        with:
          name: aria2c-windows-${{ github.run_id }}
          path: |
            dist/*
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: prepare
        run: |
          sudo apt-get update
          sudo apt-get install -y gettext
      - name: xmake
        uses: xmake-io/github-action-setup-xmake@v1
        with:
          xmake-version: latest
      - name: build x64
        env:
          VERSION: ${{ github.ref_name }}
        run: xmake f -a x86_64 -c -y && xmake pack aria2
      - name: setup arm-gnu-toolchain
        run: |
          curl -L -o arm-gnu-toolchain.txz https://developer.arm.com/-/media/Files/downloads/gnu/14.2.rel1/binrel/arm-gnu-toolchain-14.2.rel1-x86_64-aarch64-none-linux-gnu.tar.xz
          tar -xf arm-gnu-toolchain.txz -C build && mv build/arm-gnu-toolchain-* build/arm-gnu-toolchain
          ls build/arm-gnu-toolchain
          rm arm-gnu-toolchain.txz
      - name: build arm64
        env:
          VERSION: ${{ github.ref_name }}
        run: |
          xmake f -p linux -a arm64-v8a --sdk="$PWD/build/arm-gnu-toolchain" --with_static=y -c -y
          xmake pack aria2
      - name: cp
        run: mkdir -p dist && cp build/xpack/aria2/*.zip dist/
      - uses: actions/upload-artifact@v4
        with:
          name: aria2c-linux-${{ github.run_id }}
          path: |
            dist/*
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: xmake
        run: brew install xmake && xmake --version
      - name: build x64
        env:
          VERSION: ${{ github.ref_name }}
        run: xmake f -a x86_64 -c -y && xmake pack aria2
      - name: build arm64
        env:
          VERSION: ${{ github.ref_name }}
        run: xmake f -a arm64 -c -y && xmake pack aria2
      # - name: build universal
      #   run: lipo -create -output dist/aria2c-macosx-universal dist/aria2c-macosx-x86_64 dist/aria2c-macosx-arm64
      - name: cp
        run: mkdir -p dist && cp build/xpack/aria2/*.zip dist/
      - uses: actions/upload-artifact@v4
        with:
          name: aria2c-macos-${{ github.run_id }}
          path: |
            dist/*
  update-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [build-macos, build-windows, build-linux]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: aria2c-windows-${{ github.run_id }}
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: aria2c-macos-${{ github.run_id }}
          path: dist
      - uses: actions/download-artifact@v4
        with:
          name: aria2c-linux-${{ github.run_id }}
          path: dist
      - name: list file
        run: |
          ls -R dist
      - name: update
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/') && github.ref_name != 'v0.0.0'
        with:
          files: |
            dist/*
